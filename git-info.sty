% Experimental git-info package
\ProvidesPackage{git-info}[2009/04/10 experimental version]

% initialisations

% public values
\newcommand\gitauthor{GITAUTHOR}
\newcommand\gitmail{GITMAIL}
\newcommand\gitcommit{GITCOMMIT}
\newcommand\gitbranch{GITBRANCH}
\newcommand\gityear{1970}
\newcommand\gitmonth{1}
\newcommand\gitday{1}
\newcommand\githour{0}
\newcommand\gitminute{0}
\newcommand\gitsecond{0}
\newcommand\gittssign{+}
\newcommand\gittshour{0}
\newcommand\gittsminute{0}

% semi-private setting
\newcommand\GI@max@depth{8}

% private constants
\newcommand\GI@repo@prefix{.git}
\newcommand\GI@head@file{\GI@repo@prefix/HEAD}
\@ifdefinable\GI@read{\let\GI@read\@inputcheck}

% \TeX{}nical tools

\newcommand\GI@export@macro[1]{%
  \edef\@tempa{\endgroup
	\def\noexpand#1{#1}}%
  \@tempa}

\newcommand\GI@set@export[2]{%
  \def\noexpand#1{\unexpanded\expandafter{#2}}}%

\newcommand\GI@safe@reading{%
  \let\do\@makeother \dospecials
  \catcode32 10
  \catcode08 10
  \endlinechar\m@ne
  \everyeof{\noexpand}}

% finding the .git directory

\newcommand\GI@check@repo@prefix{%
  \IfFileExists{./\GI@head@file}{%
	\edef\GI@repo@prefix{./\GI@repo@prefix}%
	}{%
	\GI@set@repo@prefix}}

\newcommand\GI@set@repo@prefix{%
  \begingroup \count@\GI@max@depth\relax
  \GI@set@repo@prefix@}

\newcommand\GI@set@repo@prefix@{%
  \advance\count@\m@ne
  \ifnum\count@<\z@
	\expandafter\GI@not@a@git@repo
  \else
	\edef\GI@repo@prefix{../\GI@repo@prefix}%
	\IfFileExists{\GI@head@file}{%
	  \GI@export@macro\GI@repo@prefix
	  }{%
	  \expandafter\GI@set@repo@prefix@}%
  \fi}

\newcommand\GI@not@a@git@repo{%
  \endgroup
  \PackageError{git-info}{%
	Current directory is not a git repository}{%
	Check the manual for details.}%
  \endinput}

% finding the path to head

\newcommand\GI@get@head@path{%
  \openin\GI@read\GI@head@file
  \begingroup \GI@safe@reading
  \read\GI@read to\GI@head@file@contents
  \GI@export@macro\GI@head@file@contents
  \closein\GI@read
  \expandafter\GI@set@head@path\GI@head@file@contents\@nil}

\@ifdefinable\GI@set@head@path{%
  \begingroup 
  \GI@safe@reading
  \edef\@tempa{\endgroup
	\def\noexpand\GI@set@head@path\scantokens{ref:} }
  \@tempa#1\@nil{\def\GI@head@path{#1}}}

% extracting the branch name from the path to head

\newcommand\GI@get@branch{%
  \expandafter\GI@set@branch\GI@head@path\@nil}

 \@ifdefinable\GI@set@branch{%
   \def\GI@set@branch refs/heads/#1\@nil{%
	 \def\gitbranch{#1}}}

% finding the hash (sha1) of head

\newcommand\GI@get@head@hash{%
  \openin\GI@read\GI@repo@prefix/\GI@head@path
  \begingroup \GI@safe@reading
  \read\GI@read to\GI@head@hash
  \GI@export@macro\GI@head@hash
  \closein\GI@read}

% finding head commit infos

\newcommand\GI@get@head@infos{%
  \openin\GI@read\GI@repo@prefix/logs/\GI@head@path
  \begingroup \GI@safe@reading
  \GI@get@head@infos@loop}

\newcommand\GI@get@head@infos@loop{%
  \read\GI@read to\GI@log@line
  \expandafter\GI@infos@from@line\GI@log@line\@nil
  \ifx\GI@commit\GI@head@hash
	\expandafter\GI@get@head@infos@end
  \else
	\expandafter\GI@get@head@infos@loop
  \fi}

\@ifdefinable\GI@infos@from@line{%
  \def\GI@infos@from@line#1 #2 #3 <#4> #5 #6 #7\@nil{%
	\def\GI@commit{#2}%
	\def\GI@name{#3}%
	\def\GI@mail{#4}%
	\def\GI@timestamp{#5}%
	\def\GI@timeshift{#6}%
	\def\GI@what{#7}}}

\newcommand\GI@get@head@infos@end{%
  \closein\GI@read
  \edef\@tempa{\endgroup
	\GI@set@export\GI@timestamp{\GI@timestamp}%
	\GI@set@export\GI@timeshift{\GI@timeshift}%
	\GI@set@export\gitcommit{\GI@commit}%
	\GI@set@export\gitauthor{\GI@name}%
	\GI@set@export\gitmail{\GI@mail}}%
  \@tempa}

% time conversions

% a = quotient(a, b) * b + remainder(a, b)
% with 0 <= remainder(a, b) < abs(b)
% assumes a >= 0 and b > 0
\newcommand\GI@int@quotient[2]{%
  \ifnum\numexpr#1=\z@ \z@ \else \numexpr(#1-((#2-1)/2))/#2\relax \fi}
\newcommand\GI@int@remainder[2]{%
  \numexpr#1-\GI@int@quotient{#1}{#2}*#2\relax}

% #1 = cs to define, #2 = modulo; sets \count@ too
\newcommand\GI@extract@units[2]{%
  \edef#1{\number\GI@int@remainder{\count@}{#2}}%
  \divide\count@#2\relax}

% #1 = nb of year since epoch, result = nb of days since epoch
% Ex: 0 => 0, 365, 730, 1096, 1461, ...
\newcommand\GI@years@to@days[1]{%
  \numexpr365*(#1)+\GI@int@quotient{#1+1}{4}\relax}

% \count@ = days since ephoch (before), day of year after
\newcommand\GI@extract@year{%
  \edef\GI@year{\number\numexpr\GI@int@quotient{\count@}{365}%
	+\ifnum\count@<\GI@years@to@days{%
	  \GI@int@quotient{\count@}{365}}1969 \else1970 \fi}%
  \advance\count@-\number\GI@years@to@days{\GI@year-1970}\relax}

% sets month and day of month
\newcommand\GI@extract@month@day{%
  \ifnum\GI@int@remainder{\GI@year}{4}=\z@
	\ifnum\count@>58
	  \ifnum\count@=59 \def\GI@hook{\def\GI@day{29}} \fi
	  \advance\count@\m@ne
	\fi
  \fi
  \countdef\GI@month\tw@ \GI@month\@ne
  \@for\GI@month@length:=31,28,31,30,31,30,31,31,30,31,30,31\do{%
	\GI@extract@month@day@loop}%
  \csname GI@hook\endcsname}

\newcommand\GI@extract@month@day@loop{%
  \ifnum\count@<\GI@month@length\relax
	\edef\GI@day{\number\numexpr1+\count@}%
	\let\GI@extract@month@day@loop\relax
  \else
	\advance\GI@month\@ne
	\advance\count@-\GI@month@length
  \fi}

\newcommand\GI@get@datetime{%
  \begingroup
  \expandafter\GI@parse@timeshift\GI@timeshift
  \count@\numexpr\GI@timestamp
	\GI@tssign((\GI@tshour*60+\GI@tsmin)*60)\relax
  \GI@extract@units\GI@sec{60}%
  \GI@extract@units\GI@min{60}%
  \GI@extract@units\GI@hour{24}%
  \GI@extract@year
  \GI@extract@month@day
  \edef\@tempa{\endgroup
	\GI@set@export\gityear{\GI@year}%
	\GI@set@export\gitmonth{\the\GI@month}%
	\GI@set@export\gitday{\GI@day}%
	\GI@set@export\githour{\GI@hour}%
	\GI@set@export\gitminute{\GI@min}%
	\GI@set@export\gitsecond{\GI@sec}%
	\GI@set@export\gittssign{\GI@tssign}%
	\GI@set@export\gittshour{\GI@tshour}%
	\GI@set@export\gittsminute{\GI@tsmin}}%
  \@tempa}

\newcommand\GI@parse@timeshift[5]{%
  \def\GI@tssign{#1}%
  \def\GI@tshour{#2#3}%
  \def\GI@tsmin{#4#5}}

% time display

\newcommand\GI@pad[1]{%
  \ifnum#1<10 0#1\else#1\fi}

\newcommand\gitisodate{%
  \gityear-\GI@pad{\gitmonth}-\GI@pad{\gitday}%
  T\GI@pad{\githour}:\GI@pad{\gitminute}:\GI@pad{\gitsecond}%
  \gittssign\gittshour:\gittsminute}

% main

\newcommand\gitgetinfos{%
  \begingroup
  \GI@check@repo@prefix
  \GI@get@head@path
  \GI@get@head@hash
  \GI@get@head@infos
  \GI@get@branch
  \GI@get@datetime
  \edef\@tempa{\endgroup
	\GI@set@export\gitauthor{\gitauthor}%
	\GI@set@export\gitmail{\gitmail}%
	\GI@set@export\gitcommit{\gitcommit}%
	\GI@set@export\gitbranch{\gitbranch}%
	\GI@set@export\gityear{\gityear}%
	\GI@set@export\gitmonth{\gitmonth}%
	\GI@set@export\gitday{\gitday}%
	\GI@set@export\githour{\githour}%
	\GI@set@export\gitminute{\gitminute}%
	\GI@set@export\gitsecond{\gitsecond}%
	\GI@set@export\gittssign{\gittssign}%
	\GI@set@export\gittshour{\gittshour}%
	\GI@set@export\gittsminute{\gittsminute}}%
  \@tempa}

\gitgetinfos
